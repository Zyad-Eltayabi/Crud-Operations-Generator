<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ifr/02UPgQQBOYQAAAAASUVORK5CYII=
</value>
  </data>
</root>